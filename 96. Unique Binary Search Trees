这道题卡了很久，因为一开始就看了官方题解，是什么卡特兰数，一直不能理解，直到有个网友指点了一下，感觉豁然开朗，
给大家分享一下，这其实是一道典型的动态规划问题，比如n=3,那么根节点只能从1,2,3这三个数里面选，如果选1的话，
那么左边必然没有数了，因为这是个二叉搜索树嘛，那么右边就可以选比1大的数组成子树，那就是2,3这两个数，那么dp[1]=dp[1-1]*dp[3-1]
因此在这种情况下dp[0]必须设置为1，一开始设置为了0，肯定是错误的，所以n==0的情况，我们要单独处理掉。如果选2为根节点电话，那么左边的数
只剩1了，右边的数只剩3了，就是dp[2]=dp[2-1]*dp[3-2],dp[3]=dp[3-1]*dp[3-3]。把这三种情况相加，就是dp[n]的答案
class Solution(object):
    def numTrees(self, n):
        """
        :type n: int
        :rtype: int
        """
        dp=[0]*(n+1)
        dp[0]=1
        dp[1]=1
        for i in range(2,n+1):
            for j in range(1,i+1):
                dp[i]+=dp[j-1]*dp[i-j]
        return dp[n]
        
        
